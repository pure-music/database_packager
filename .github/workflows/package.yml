name: Daily Scheduled Task

on:
  schedule:
    - cron: '0 18 * * *'
  workflow_dispatch:      # 也支持手动触发

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: set up JDK 18
        uses: actions/setup-java@v3
        with:
          java-version: '18'
          distribution: 'temurin'
          cache: gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build china jar
        run: |
          ./gradlew clean build
      - uses: actions/upload-artifact@v4
        with:
          name: artifacts_jar
          if-no-files-found: error
          path: |
            ${{github.workspace}}/build/libs/subsonic_database_scan-1.0-SNAPSHOT.jar

  package:
    needs: build
    name: package
    strategy:
      fail-fast: false
      matrix:
        include:
          - url: url_mefun
            username: username_mefun
            password: password_mefun
            type: 1

          - url: url_yinhai
            username: username_yinhai
            password: password_yinhai
            type: 1

          - url: url_wenjian
            username: username_wenjian
            password: password_wenjian
            type: 1

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: set up JDK 18
        uses: actions/setup-java@v3
        with:
          java-version: '18'
          distribution: 'temurin'
          cache: gradle
      - name: Download jar
        uses: actions/download-artifact@v4
        with:
          name: artifacts_jar
          path: artifacts
      - name: package sqlite
        run: |
          host=$(echo "${{ secrets[matrix.url] }}" | sed -E 's#^https?://([^/:]+).*#\1#' | sed 's/\./_/g')
          echo "$host"
          echo "host=$host" >> $GITHUB_ENV
          db_file="main.db"
          db_path=${{github.workspace}}/$db_file
          echo "db_path=${{github.workspace}}/$db_file" >> $GITHUB_ENV
          echo $db_path
          java -jar artifacts/subsonic_database_scan-1.0-SNAPSHOT.jar ${{ matrix.type }} ${{ secrets[matrix.url] }} ${{ secrets[matrix.username] }} ${{ secrets[matrix.password] }} $db_path
          zipFile="$host.db.zip"
          echo "zipFile=$zipFile" >> $GITHUB_ENV
          cd ${{github.workspace}}
          zip $zipFile $db_file
      - uses: actions/upload-artifact@v4
        with:
          name: artifacts_${{ env.host }}
          if-no-files-found: error
          path: |
            ${{github.workspace}}/${{ env.zipFile }}

  release:
    needs: package
    name: release
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts_music_mefun_org
        uses: actions/download-artifact@v4
        with:
          name: artifacts_music_mefun_org
          path: artifacts
      - name: Download artifacts_music_mefun_org
        uses: actions/download-artifact@v4
        with:
          name: artifacts_yinhai_aiinyue_com
          path: artifacts
      - name: parse
        run: |
          today=$(date '+%Y-%m-%d-%H-%M')
          echo "buildTime=$today" >> $GITHUB_ENV
      - name: Create Release
        id: create_remote_release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{env.buildTime}}
          tag_name: ${{env.buildTime}}
          files: artifacts/*
